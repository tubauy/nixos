;;(include "./workspaces_hyprland.yuck")

(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
    (box :space-evenly true
      (label :text "${workspaces}${current_workspace}" :visible false)
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}" :text "${workspace.id}")
            )
          )
        )
      )
    )
  )

(deflisten window :initial "Empty" "sh ~/.config/eww/scripts/get-window-title")
(defwidget window_w []
  (box
    :class "window_w"
    (label :limit-width 50 :class "window_w" :text "${window}"
    )
  )
)

(defpoll time :interval "1s"
  `date +%H:%M:%S`)
(defwidget timew []
(box
  :class "timew"
  (label :class "timew" :text "${time}")
))

(defpoll battery :interval "1s" :initial "?" "sh ~/.config/eww/scripts/battery")
(defwidget bat []
(box 
  :class "batb"
  (label :class "bat" :text "bat: ${battery}")
)
)

(defpoll volume :interval "1s" :inital "?" "amixer sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }'")
(defwidget vol []
  (box
    :class "volb"
    (label :class "vol" :text "vol: ${volume}")
  )
)

(defpoll brightness :interval "1s" :initial "?" "sh ~/.config/eww/scripts/bright")
(defwidget bright []
  (box
    :class "brightb"
    (label :class "bright" :text "bri: ${brightness}")
  )
)

(defpoll nixtatus :interval "1s" :initial "?" "sh ~/.config/eww/scripts/nix-status")
(defwidget nixtatus []
  (box
    :width 10
    :class "nixtatus"
    :style "background-color: ${nixtatus}"
    (label :class "nlabel" :text " " :width 20)
  )
)


(defwidget img []
  (eventbox
    :width 40
    :onclick "hyprctl dispatch -- exec kitty";;wofi --width=30% --height=30% -x 0 -y 55 --show drun -I"
    :class "ibox"
    (image :class "icon" :path "/home/tbu/Pictures/icons/cat2.png" :image-width 40 :image-height 40)
  )
)

(defwidget barcontent []
    (centerbox
        :class "wndw"
        (bar-left)
        (bar-center)
        (bar-right)))

(defwidget bar-left []
  (box
    :class "bar-left"
    :halign "start"
    :space-evenly false
    (img)(workspaces)))

(defwidget bar-center []
  (box
    :class "bar-center"
    (window_w)))

(defwidget bar-right []
  (box
   :valign "center"
   :space-evenly true
   :halign "end"
   :class "bar-right"
   (nixtatus)(vol)(bright)(bat)(timew)
   ))


(defwindow bar
    :class "bar"
    :monitor 0
    :geometry (geometry :x "0%"
                        :y "0%"
                        :width "100%"
                        :height "40px"
                        :anchor "top center")
    :stacking "bg"
    ;; :reserve (struts :distance "10px" :side "top")
    ;;:windowtype "desktop"
    ;; :wm-ignore false
    ;; :focusable false
     :exclusive true
    (barcontent))

;;########################################################################;;
;;########################################################################;;
;;########################################################################;;

(defwidget pimg [?cmd ?path]
  (box
  :hexpand true
  :vexpand true
  :class "pimg"
  (eventbox
    :hexpand true
    :vexpand true
    :onclick cmd
    :class "ibox"
    (image :class "picon" :path path :image-width 100 :image-height 100)
  ))
)

(defwidget content []
  (box
  :hexpand true
  :vexpand true
  :class "pcont"
  (centerbox
      :class "pmenuin"
      (pimg  :cmd "cd /home/tbu/nixos && echo tbu | sudo -S ./update.sh" 
            :path "/home/tbu/Pictures/icons/nixos-logo.png")
      (pimg  :cmd "hyprctl dispatch exit" 
            :path "/home/tbu/Pictures/icons/exit.png")
      (pimg  :cmd "shutdown now" 
            :path "/home/tbu/Pictures/icons/power2.png")
  ))
)


(defwindow powermenu
  :class "pmenu"
  :monitor 0
  :geometry (geometry :width "30%"
                      :height "20%"
                      :anchor "center")
  :stacking "overlay"
  (content)
)

;;########################################################################;;
;;########################################################################;;
;;########################################################################;;

(defwidget app [?app ?path]
  (box
  :hexpand true
  :vexpand true
  :class "pimg"
  (eventbox
    :hexpand true
    :vexpand true
    :onclick "hyprctl dispatch -- exec ${app}"
    :class "ibox"
    (image :class "picon" :path path :image-width 50 :image-height 50)
  ))
)

(defwidget dcontent []
  (box
  :hexpand true
  :vexpand true
  :class "pcont"
  (box
      :class "pmenuin"
      (app  :app "kitty" 
            :path "/home/tbu/Pictures/icons/kitty.svg")
      (app  :app "thunar" 
            :path "/home/tbu/Pictures/icons/file-manager.svg")
      (app  :app "vivaldi" 
            :path "/home/tbu/Pictures/icons/firefox-icon-1981x2048-4izjijq3.png")
      (app  :app "kitty nvim" 
            :path "/home/tbu/Pictures/icons/neovim.svg")
       (app  :app "code" 
            :path "/home/tbu/Pictures/icons/visual-studio-code.png")
  ))
)

(defwindow dock
  :class "dock"
  :monitor 0
  :geometry (geometry :x "0%"
                      :y "10px"
                      :width "25%"
                      :height "40px"
                      :anchor "bottom center")
  :stacking "fg"
  ;; :reserve (struts :distance "10px" :side "top")
  ;;:windowtype "desktop"
  ;; :wm-ignore false
  ;; :focusable false
  :exclusive true
  (dcontent))

;;########################################################################;;
;;########################################################################;;
;;########################################################################;;
